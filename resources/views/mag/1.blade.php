@extends('layouts.app')

@section('title', 'Backlog API入門:第一回 Backlog APIを使ってできること')
@section('description', 'Backlog API入門:第一回 Backlog APIを使ってできること')
@section('content')
<div class="container">
    <div class="row">
        <div class="col-lg-12 mb-4 mt-2 bl-ag-usg">
            <h1>Backlog API入門:第一回 Backlog APIを使ってできること</h1>
            <h2>Backlog APIとは</h2>
            <p>バックログの各種情報をhttpリクエストにより取得し、レスポンスをJSON形式で受け取ることができるBacklog公式のWebAPIである。概要を下記に示す。</p>
            <img src="{{ url('/img/mag/1/backlog_api_outline.png') }}" alt="Backlog API利用の概要" />
            <p>上記の図のように、APIにリクエストを投げ、受け取ったJSONを任意のプラグラミング言語にて配列操作し加工・出力することができる。</p>
            <p>もちろん標準機能でも高度な検索機能を持っているが、例えば「プロジェクトごとの月内のみの工数を知りたい」などの標準機能にない機能を開発することができる。</p>
            <h2>Backlogをベースに行っている業務とは？</h2>
            プロジェクト管理にBacklogを使っているプロジェクトでは、例えば月額制のシステム保守サービスに従事しているメンバーにおいては、下記のような業務が考えられる。
            <ul>
                <li>月次報告書の作成、提出（クライアント向け）</li>
                <li>週報の作成、提出（社内報告向け）</li>
                <li>夏季休業、年末年始休業のお知らせ配布</li>
            </ul>
            <p>例えば、プロジェクトごとに、月次報告書を作る場合、月ごとの工数集計機能は、標準機能にはないため、手作業で集計を行う必要がある。<br>
                また、週報においても、同じような集計を毎週やる場合、決まり切った設定で集計をコマンド一つでかけられれば、時間短縮になる。<br>
                お知らせなどの配布は、プロジェクトをまたいで一斉に送信する機能はないので、一通一通、課題の作成、送信をする必要がある。</p>
            <p>
                <strong>「月毎にバックログ上に登録された実績工数を集計をして、報告書を作成する機能があればいいのに・・・」</strong>
            </p>
            <p><strong>「同じ内容の課題を、複数のプロジェクトに一斉に投稿する機能があればいいのに・・・」</strong></p>
            <p>Backlog APIを使うことで、こうした標準機能にはない、独自にカスタマイズした機能を、任意のプログラミング言語で作っていくことができるのである。</p>
            <h2>Backlog APIの種類</h2>
            <p>Backlog APIにはGET(取得)とPOST(送信)の二つのメソッドを中心に、BATCH(連続処理),DELETE(削除)などさまざまなものがある。</p>
            <p>詳細は公式の<a href="https://developer.nulab.com/ja/docs/backlog/#">Backlog APIリファレンス</a>を参照して欲しい。</p>
            <p>ここでは、APIアプリでよく使われるであろう、GET(取得)とPOST(送信)の二つのメソッドについて説明する。
            </p>
            <h3>GET(取得)</h3>
            <p>バックログから、さまざまなデータの取得が可能である。ここで説明する主なものとして下記のようなものがある。</p>
            <ul>
                <li>プロジェクトキーを指定して、プロジェクトIDを取得する</li>
                <li>プロジェクトIDを指定して、そのプロジェクトに存在する課題一覧を取得する</li>
                <li>課題キーを指定して、その課題に存在するコメント一覧(工数付与を含む)を取得する</li>
                <li>プロジェクトIDを指定して、そのプロジェクトにある任意の種別名をもつ種別IDを取得する</li>
            </ul>
            <h3>POST(送信)</h3>
            <ul>
                <li>プロジェクトID、指定したタイトル、内容、種別を指定し、それぞれのプロジェクトに課題を一斉投稿する</li>
            </ul>
            <h2>一番簡単なBacklog APIの叩き方</h2>
            <p>まずは課題一覧の取得から。下記のコードをコピーして、「issues_list.php」という名前で保存。</p>
            <script src="https://gist.github.com/k2hrm/b8b5d79372187485b137641c9226fb43.js"></script>
            <p>2行目の*****を現在使用しているBacklogのURLのサブドメインに変更。</p>
            <code>$hostname = '*****.backlog.jp'; //対象backlogのドメインを入れてください</code>
            <p>3行目の*****を現在使用しているBacklogで取得したAPIキーに変更。</p>
            <code>$apiKey = '******************************'; //API keyを入れてください</code>
            <p>これさえできれば、ターミナルから下記のようにコマンドを打つことで、JSONのレスポンスが帰ってくる。</p>
            <p>プロジェクト名「HOGE」の「2021-01-01」から場合の例</p>
            <code>php issues_list.php HOGE 2021-01-01</code>
        </div>
    </div>
</div>
@endsection